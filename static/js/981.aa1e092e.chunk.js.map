{"version":3,"file":"static/js/981.aa1e092e.chunk.js","mappings":"qQAAA,IAAMA,EAAW,gCACXC,EAAU,mCAET,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIH,EAAJ,oCAAwCC,IACjDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAC,GAAG,OAAIA,EAAIE,OAAR,GACZ,CAEM,SAASC,EAAgBC,GAC9B,OAAON,MAAM,GAAD,OACPH,EADO,gCACyBC,EADzB,kBAC0CQ,IAEnDL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAC,GAAG,OAAIA,EAAIE,OAAR,GACZ,CAEM,SAASG,EAAgBC,GAC9B,OAAOR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,oBAAyCV,IAAWG,MAAK,SAAAC,GAAG,OACtEA,EAAIC,MADkE,GAGzE,CAEM,SAASM,EAAoBD,GAClC,OAAOR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,4BAAiDV,IAC1DG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAC,GAAG,OAAIA,EAAIQ,IAAR,GACZ,CAEM,SAASC,EAAuBH,GACrC,OAAOR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,4BAAiDV,IAAWG,MACtE,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAEN,C,sDChCD,MAAwB,2B,SCKxB,MAJA,YAAgC,IAATS,EAAQ,EAARA,KACrB,OAAO,eAAIC,UAAWC,EAAf,SAAyBF,GACjC,C,gFCHD,GAAgB,WAAa,8BAA8B,YAAc,gC,kBC6CzE,EA1CkB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOV,EAAP,KAAoBW,EAApB,KAgBA,OACE,+BACE,kBAAMC,SAZW,SAAAC,GACnBA,EAAEC,iBACyB,KAAvBd,EAAYe,QACdC,MAAM,qBAGRP,EAAST,GACTW,EAAe,GAChB,EAIiCJ,UAAWC,EAAAA,WAAzC,WACE,kBACES,KAAK,OACLC,KAAK,cACLC,MAAOnB,EACPoB,aAAa,MACbC,WAAS,EACTC,YAAY,iBACZb,SAxBkB,SAAAI,GACxBF,EAAeE,EAAEU,OAAOJ,MAAMK,cAC/B,EAuBOjB,UAAWC,EAAAA,eAEb,mBAAQS,KAAK,SAASV,UAAWC,EAAAA,aAAjC,wBAMP,E,wBCDD,EAhCmB,WAAO,IAAD,EACvB,GAAwCiB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOkB,EAAP,KAAeC,EAAf,KAEMC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACJF,IACF/B,EAAAA,EAAAA,IAAgB+B,GAAOnC,KAAKkC,EAE/B,GAAE,CAACC,EAAOJ,IAOX,OACE,+BACE,2BACE,SAACO,EAAA,EAAD,CAAa3B,KAAM,uBACnB,SAAC,EAAD,CAAWa,MAAOW,EAAOrB,SATL,SAAAqB,GAExBH,EAD6B,KAAVG,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,IAOMF,EAAOM,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,OAASH,EAAMjB,QADhDiB,EAAME,GADA,QAQxB,C","sources":["ApiServices/API.jsx","webpack://react-homework-template/./src/pages/HeadingPage/HeadingPage.module.css?857a","pages/HeadingPage/HeadingPage.jsx","webpack://react-homework-template/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ea073995e4db72262db9a5039068ed8d';\n\nexport function getTrendingMovies() {\n  return fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`)\n    .then(res => res.json())\n    .then(res => res.results);\n}\n\nexport function getSearchMovies(searchQuery) {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n}\n\nexport function getMovieDetails(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`).then(res =>\n    res.json()\n  );\n}\n\nexport function getMovieDetailsCast(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(res => res.json())\n    .then(res => res.cast);\n}\n\nexport function getMovieDetailsReviews(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    res => res.json()\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HeadingPage_title__ma9pD\"};","import s from './HeadingPage.module.css';\n\nfunction HeadingPage({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n\nexport default HeadingPage;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBox_searchForm__SdqTH\",\"searchInput\":\"SearchBox_searchInput__RgkWt\"};","import s from './SearchBox.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ onChange }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter movie title');\n    }\n\n    onChange(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.searchForm}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Movie title...\"\n          onChange={handleQuerySearch}\n          className={s.searchInput}\n        />\n        <button type=\"submit\" className={s.searchButton}>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;\n","import SearchBox from '../../components/SearchBox/SearchBox';\nimport HeadingPage from 'pages/HeadingPage/HeadingPage';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from '../../ApiServices/API';\nimport { Link } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query) {\n      getSearchMovies(query).then(setMovies);\n    }\n  }, [query, searchParams]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <ul>\n        <HeadingPage text={'Search your movie'}></HeadingPage>\n        <SearchBox value={query} onChange={updateQueryString} />\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title || movie.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","fetch","then","res","json","results","getSearchMovies","searchQuery","getMovieDetails","movieId","getMovieDetailsCast","cast","getMovieDetailsReviews","text","className","s","onChange","useState","setSearchQuery","onSubmit","e","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","target","toLowerCase","useSearchParams","searchParams","setSearchParams","movies","setMovies","query","get","useEffect","HeadingPage","map","movie","to","id","title"],"sourceRoot":""}